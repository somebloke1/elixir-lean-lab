name: Elixir CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        otp: ['26.0']
        elixir: ['1.15.7']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
    
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    
    - name: Install dependencies
      run: mix deps.get
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Run tests
      run: mix test
    
    - name: Check compilation warnings
      run: mix compile --warnings-as-errors
    
    - name: Run Credo
      run: mix credo --strict
      continue-on-error: true # Allow Credo failures initially
    
    - name: Run Dialyzer
      run: mix dialyzer
      continue-on-error: true # Allow Dialyzer failures initially

  build-release:
    name: Build release
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.15.7'
        otp-version: '26.0'
    
    - name: Install dependencies
      run: |
        mix deps.get --only prod
        MIX_ENV=prod mix compile
    
    - name: Build release
      run: MIX_ENV=prod mix release
    
    - name: Check release size
      run: |
        echo "Release size breakdown:"
        du -sh _build/prod/rel/elixir_lean_lab/
        du -sh _build/prod/rel/elixir_lean_lab/*/ | sort -h